{"ast":null,"code":"require('isomorphic-fetch');\n\nexport const getPurchaseOrders = () => getDataByType('orders');\nexport const getDataByType = async type => await fetchEntity(type);\nexport const fetchEntity = entity => fetch(`http://localhost:3001/${entity}`).then(response => {\n  if (response.status >= 400) {\n    throw new Error(\"Bad response from server\");\n  }\n\n  return response;\n}).then(response => {\n  return response.json();\n});","map":{"version":3,"names":["require","getPurchaseOrders","getDataByType","type","fetchEntity","entity","fetch","then","response","status","Error","json"],"sources":["/Users/zacmetin/Desktop/workspace/ihc-prokect/src/utils.js"],"sourcesContent":["require('isomorphic-fetch');\n\nexport const getPurchaseOrders = () => getDataByType('orders')\n\nexport const getDataByType = async (type) => await fetchEntity(type);\n\nexport const fetchEntity = (entity) => \nfetch(`http://localhost:3001/${entity}`)\n    .then((response) => {\n        if (response.status >= 400) {\n            throw new Error(\"Bad response from server\");\n        }\n        return response\n    })\n    .then((response) => {\n        return response.json()\n    });\n    \n\n"],"mappings":"AAAAA,OAAO,CAAC,kBAAD,CAAP;;AAEA,OAAO,MAAMC,iBAAiB,GAAG,MAAMC,aAAa,CAAC,QAAD,CAA7C;AAEP,OAAO,MAAMA,aAAa,GAAG,MAAOC,IAAP,IAAgB,MAAMC,WAAW,CAACD,IAAD,CAAvD;AAEP,OAAO,MAAMC,WAAW,GAAIC,MAAD,IAC3BC,KAAK,CAAE,yBAAwBD,MAAO,EAAjC,CAAL,CACKE,IADL,CACWC,QAAD,IAAc;EAChB,IAAIA,QAAQ,CAACC,MAAT,IAAmB,GAAvB,EAA4B;IACxB,MAAM,IAAIC,KAAJ,CAAU,0BAAV,CAAN;EACH;;EACD,OAAOF,QAAP;AACH,CANL,EAOKD,IAPL,CAOWC,QAAD,IAAc;EAChB,OAAOA,QAAQ,CAACG,IAAT,EAAP;AACH,CATL,CADO"},"metadata":{},"sourceType":"module"}