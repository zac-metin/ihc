{"ast":null,"code":"require('isomorphic-fetch');\n\nexport const getPurchaseOrders = async () => {\n  const orders = await fetchEntity('orders'); //const result = await orders.json()\n  // console.log(result);\n\n  return \"Yooooo\";\n};\nexport const fetchEntity = entity => fetch(`/${entity}`).then(response => {\n  if (response.status >= 400) {\n    throw new Error(\"Bad response from server\");\n  }\n\n  return response.json();\n}).then(stories => {\n  console.log(stories);\n}); //.then(response => response.json());","map":{"version":3,"names":["require","getPurchaseOrders","orders","fetchEntity","entity","fetch","then","response","status","Error","json","stories","console","log"],"sources":["/Users/zacmetin/Desktop/workspace/ihc-prokect/src/utils.js"],"sourcesContent":["require('isomorphic-fetch');\n\nexport const getPurchaseOrders = async () => {\n    const orders = await fetchEntity('orders') \n\n    //const result = await orders.json()\n    // console.log(result);\n        return \"Yooooo\"\n}\n\nexport const fetchEntity = (entity) => \nfetch(`/${entity}`)\n    .then((response) => {\n        if (response.status >= 400) {\n            throw new Error(\"Bad response from server\");\n        }\n        return response.json();\n    })\n    .then((stories) => {\n        console.log(stories);\n    });\n    \n    //.then(response => response.json());\n\n"],"mappings":"AAAAA,OAAO,CAAC,kBAAD,CAAP;;AAEA,OAAO,MAAMC,iBAAiB,GAAG,YAAY;EACzC,MAAMC,MAAM,GAAG,MAAMC,WAAW,CAAC,QAAD,CAAhC,CADyC,CAGzC;EACA;;EACI,OAAO,QAAP;AACP,CANM;AAQP,OAAO,MAAMA,WAAW,GAAIC,MAAD,IAC3BC,KAAK,CAAE,IAAGD,MAAO,EAAZ,CAAL,CACKE,IADL,CACWC,QAAD,IAAc;EAChB,IAAIA,QAAQ,CAACC,MAAT,IAAmB,GAAvB,EAA4B;IACxB,MAAM,IAAIC,KAAJ,CAAU,0BAAV,CAAN;EACH;;EACD,OAAOF,QAAQ,CAACG,IAAT,EAAP;AACH,CANL,EAOKJ,IAPL,CAOWK,OAAD,IAAa;EACfC,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACH,CATL,CADO,C,CAYH"},"metadata":{},"sourceType":"module"}